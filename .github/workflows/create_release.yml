name: Create Release Branch

on:
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set Git user info
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          
      - name: Install dependencies
        run: |
          npm install -g standard-version

      - name: Generate release version and changelog
        id: generate_version
        run: |
          # Run standard-version dry-run and capture output
          standard_version_output=$(standard-version --dry-run)
          
          # Extract the new tag from the dry-run output
          new_tag=$(echo "$standard_version_output" | grep 'tagging release' | awk '{print $NF}')
          
          # Extract the changelog from the dry-run output
          changelog=$(echo "$standard_version_output" | sed -n '/^---$/,/^---$/p' | sed '1d;$d')
          
          # Log the latest tag, new tag, and changelog for debugging
          latest_tag=$(git tag -l | sort -V | tail -n 1)
          echo "Latest tag: $latest_tag"
          echo "New tag: $new_tag"
          echo "Changelog:"
          echo "$changelog"
          
          # Export new tag and changelog to environment
          echo "NEW_TAG=${new_tag}" >> $GITHUB_ENV
          echo "$changelog" > changelog.txt

      - name: Update package.json with new version
        run: |
          if [ -z "${{ env.NEW_TAG }}" ]; then
            echo "No new version detected. Skipping package.json update."
            exit 0
          fi
          new_version=$(echo "${{ env.NEW_TAG }}" | sed 's/^v//')
          jq --arg version "$new_version" '.version = $version' package.json > package.json.tmp
          mv package.json.tmp package.json
          git add package.json
          git commit -m "chore: update version to ${{ env.NEW_TAG }}"

      - name: Create and push new release branch
        run: |
          git checkout -b release/${{ env.NEW_TAG }}
          git push origin release/${{ env.NEW_TAG }}

      - name: Update CHANGELOG.md manually
        run: |
          # Append the new changelog content to the top of CHANGELOG.md
          { echo "$changelog"; echo; cat CHANGELOG.md; } > CHANGELOG.tmp
          mv CHANGELOG.tmp CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "docs: update CHANGELOG.md for Release ${{ env.NEW_TAG }} [skip ci]"
          git push origin release/${{ env.NEW_TAG }}

      - name: Open pull request to master
        uses: devops-infra/action-pull-request@v0.5.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          title: "Release ${{ env.NEW_TAG }}"
          body: |
            Hi!
            This PR is for a new release ${{ env.NEW_TAG }} to be merged with master.
          source_branch: release/${{ env.NEW_TAG }}
          target_branch: master
          assignee: hashemuhammed
          reviewer: hashemuhammed
          label: release

      - name: Open pull request to dev
        uses: devops-infra/action-pull-request@v0.5.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          title: "Changelog ${{ env.NEW_TAG }}"
          body: |
            Hi!
            This PR is for updating changelog for release ${{ env.NEW_TAG }} to be merged with dev.
          source_branch: release/${{ env.NEW_TAG }}
          target_branch: dev
          assignee: hashemuhammed 
          reviewer: hashemuhammed 
          label: release
