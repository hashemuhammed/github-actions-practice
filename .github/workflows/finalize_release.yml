name: Finalize Release

on:
  push:
    branches:
      - main
      - dev

jobs:
  finalize-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check for relevant commit message and manage tags and branches
        id: check_and_manage
        run: |
          # Get commit messages
          commits=$(git log --pretty=format:"%s" HEAD^..HEAD)
          echo "Commit messages: $commits"

          # Extract tag name from commit message
          tag_name=$(echo "$commits" | awk -F'release/' '{print $2}' | awk '{print $1}')
          branch_name="release/$tag_name"  # Ensure the branch name is correctly prefixed

          echo "Extracted tag name: $tag_name"
          echo "Extracted branch name: $branch_name"

          # Check if the commit message contains the relevant pattern
          if echo "$commits" | grep -q "update CHANGELOG.md for release/"; then
            echo "Relevant commit found with tag name: $tag_name"

            # Check if the tag already exists
            if git tag -l | grep -q "^$tag_name$"; then
              echo "Tag $tag_name already exists"
              echo "TAG_EXISTS=true" >> $GITHUB_ENV
            else
              echo "Tag $tag_name does not exist"
              echo "TAG_EXISTS=false" >> $GITHUB_ENV

              # Create and push the new tag
              git tag $tag_name
              git push origin $tag_name

              # Delete the release branch
              git push origin --delete $branch_name

              echo "Created and pushed new tag $tag_name, and deleted branch $branch_name"
            fi
          else
            echo "No relevant commit found"
            echo "RELEVANT=false" >> $GITHUB_ENV
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Skip processing if tag exists
        if: env.TAG_EXISTS == 'true'
        run: |
          echo "Skipping processing as tag already exists"
